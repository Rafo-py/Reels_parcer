from aiogram import Router, types
from aiogram.filters import Command
from parse_reels import fetch_top_reels_public
import csv
import os

router = Router()

@router.message(Command("reels"))
async def get_reels(message: types.Message):
    args = message.text.split()
    if len(args) < 2:
        await message.answer("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /reels <username>")
        return

    username = args[1]
    await message.answer(f"–ò—â—É Reels —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}‚Ä¶ ‚è≥")

    try:
        followers, reels, is_private = fetch_top_reels_public(username, limit=10, min_ratio=0.01)
    except ValueError as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {e}")
        return
    except Exception as e:
        await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return

    if is_private:
        await message.answer("–≠—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç –∑–∞–∫—Ä—ã—Ç. üîí")
        return

    if not reels:
        await message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω–æ Reels, –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–¥ —É—Å–ª–æ–≤–∏—è.")
        return

    # --- –°–æ–∑–¥–∞—ë–º CSV ---
    csv_filename = f"{username}_reels.csv"
    with open(csv_filename, "w", newline="", encoding="utf-8") as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(["‚Ññ", "URL", "Views", "Followers", "Ratio"])
        for i, (url, views, ratio) in enumerate(reels, start=1):
            writer.writerow([i, url, views, followers, f"{ratio:.2f}"])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º CSV –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer_document(types.FSInputFile(csv_filename))
    os.remove(csv_filename)
