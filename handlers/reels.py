from aiogram import Router, types
from aiogram.filters import Command
import csv
import os
from parse_reels import fetch_top_reels_public  # –ù–æ–≤—ã–π —Ä–∞–±–æ—á–∏–π –º–µ—Ç–æ–¥ —Å instagram-scraper

router = Router()

@router.message(Command("reels"))
async def get_reels(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reels <username>
    –ü–∞—Ä—Å–∏—Ç –ø—É–±–ª–∏—á–Ω—ã–π Instagram –∞–∫–∫–∞—É–Ω—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ø Reels –≤ CSV.
    """
    args = message.text.split()
    if len(args) < 2:
        await message.answer("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /reels <username>")
        return

    username = args[1]
    search_msg = await message.answer(f"–ò—â—É Reels —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}‚Ä¶ ‚è≥")

    try:
        followers, reels, is_private = fetch_top_reels_public(username, limit=10)
    except ValueError as e:
        await search_msg.edit_text(f"–û—à–∏–±–∫–∞: {e}")
        return
    except Exception as e:
        await search_msg.edit_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return

    if is_private:
        await search_msg.edit_text("–≠—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç –∑–∞–∫—Ä—ã—Ç. üîí")
        return

    if not reels:
        await search_msg.edit_text("–ù–µ –Ω–∞–π–¥–µ–Ω–æ Reels.")
        return

    # –°–æ–∑–¥–∞—ë–º CSV
    csv_filename = f"{username}_reels.csv"
    with open(csv_filename, "w", newline="", encoding="utf-8") as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(["‚Ññ", "URL", "Views", "Followers", "Ratio"])
        for i, (url, views, ratio) in enumerate(reels, start=1):
            writer.writerow([i, url, views, followers, f"{ratio:.2f}"])

    # –û—Ç–ø—Ä–∞–≤–∫–∞ CSV
    await search_msg.edit_text(f"–ì–æ—Ç–æ–≤–æ! –û—Ç–ø—Ä–∞–≤–ª—è—é CSV —Å —Ç–æ–ø {len(reels)} Reels.")
    await message.answer_document(types.FSInputFile(csv_filename))

    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    os.remove(csv_filename)
